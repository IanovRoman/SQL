
      
--task1  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_300) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше > 300. Во view три колонки: model, price, flag
create view all_products_flag_300 as

select *,
case
	when price > 300 then 1
	else 0
end flag
from
(select pc.model, price
from product
join pc
on product.model = pc.model
union all
select printer.model, price
from product
join printer
on product.model = printer.model
union all
select laptop.model, price
from product
join laptop
on product.model = laptop.model) a 


  
--task2  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_avg_price) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше cредней . Во view три колонки: model, price, flag
create view all_products_flag_avg_price as

with all_product_1 as
(select pc.model, price
from product
join pc
on product.model = pc.model
union all
select printer.model, price
from product
join printer
on product.model = printer.model
union all
select laptop.model, price
from product
join laptop
on product.model = laptop.model)
select *,
case	
	when price > (select avg(price) from all_product_1) then 1
	else 0
end flag
from all_product_1





--task3  (lesson4)
-- Компьютерная фирма: Вывести все принтеры производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'. Вывести model


select printer.model
from printer
join product
on printer.model = product.model
where price > (select avg(price) from printer join product on printer.model = product.model where maker = 'D' and maker = 'C')


--task5 (lesson4)
-- Компьютерная фирма: Какая средняя цена среди уникальных продуктов производителя = 'A' (printer & laptop & pc)

select avg(price) 
from 
(select distinct(pc.model), price
from product
join pc
on product.model = pc.model
where maker = 'A'
union all
select distinct(printer.model), price
from product
join printer
on product.model = printer.model
where maker = 'A'
union all
select distinct (laptop.model), price
from product
join laptop
on product.model = laptop.model
where maker = 'A') a
--task6 (lesson4)
-- Компьютерная фирма: Сделать view с количеством товаров (название count_products_by_makers) по каждому производителю. Во view: maker, count
create view count_products_by_makers as
select maker, count(*)
from product
group by maker


--task7 (lesson4)
-- По предыдущему view (count_products_by_makers) сделать график в colab (X: maker, y: count)



--task8 (lesson4)
-- Компьютерная фирма: Сделать копию таблицы printer (название printer_updated) и удалить из нее все принтеры производителя 'D'

create table printer_updated as
select printer.code, product.model, printer.color, product.type, printer.price
from printer
join product 
on printer.model = product.model
where maker != 'D'

--task9 (lesson4)
-- Компьютерная фирма: Сделать на базе таблицы (printer_updated) view с дополнительной колонкой производителя (название printer_updated_with_makers)

create view printer_updated_with_makers as
select printer_updated.code, product.model, printer_updated.color, product.type, printer_updated.price, product.maker
from printer_updated
join product
on printer_updated.model = product.model

select *
from printer_updated_with_makers

--task10 (lesson4)
-- Корабли: Сделать view c количеством потопленных кораблей и классом корабля (название sunk_ships_by_classes). Во view: count, class (если значения класса нет/IS NULL, то заменить на 0)
create view sunk_ships_by_classes as
SELECT c.class, COUNT(s.ship)
FROM classes c
  LEFT JOIN
    (
       SELECT o.ship, sh.class
       FROM outcomes o
       LEFT JOIN ships sh ON sh.name = o.ship
       WHERE o.result = 'sunk'
    ) AS s ON s.class = c.class OR s.ship = c.class
GROUP BY c.class

select *
from sunk_ships_by_classes


--task11 (lesson4)
-- Корабли: По предыдущему view (sunk_ships_by_classes) сделать график в colab (X: class, Y: count)

--task12 (lesson4)
-- Корабли: Сделать копию таблицы classes (название classes_with_flag) и добавить в нее flag: если количество орудий больше или равно 9 - то 1, иначе 0
create table classes_with_flag as
select *,
case
	when numGuns > 9 then 1
else 0
end flag
from classes

--task13 (lesson4)
-- Корабли: Сделать график в colab по таблице classes с количеством классов по странам (X: country, Y: count)
create table count_classes as
select count(class), country
from classes
group by country

--task14 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название начинается с буквы "O" или "M".
select count(class)
from ships 
where name like 'O%' or name like 'M%'

--task15 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название состоит из двух слов.
select count(name)
from ships
where name like '% %'
union
select count(ship)
from outcomes
where ship like '% %'
--task16 (lesson4)
-- Корабли: Построить график с количеством запущенных на воду кораблей и годом запуска (X: year, Y: count)
create table count_launched_year as
select count(name), launched as year
from ships
group by launched
